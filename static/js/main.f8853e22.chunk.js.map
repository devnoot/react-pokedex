{"version":3,"sources":["components/Selector.js","App.js","index.js"],"names":["Selector","state","pokemon","onSelectPokemon","this","props","setState","selected","data","style","padding","map","pkmn","i","className","key","href","onClick","onSelect","name","Component","App","isLoading","error","selectionList","nextURL","prevURL","offset","limit","getPokemon","url","fetch","then","res","json","results","previous","next","catch","finally","getDetailedStats","params","URL","searchParams","get","id","height","weight","src","sprites","front_default","alt","front_shiny","prev","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f8853e22.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Selector extends Component {\n\n  state = {}\n\n  onSelect(pokemon) {\n    const { onSelectPokemon } = this.props;\n    this.setState({ selected: pokemon }); \n    onSelectPokemon(pokemon); \n  }\n\n  render() {\n    const { data } = this.props;\n\n    return (\n      <div style={{ padding: \"0.5em 1em\" }}>\n        {data.map((pkmn, i) => <div className=\"Selector-Item\" key={i}>\n          <a href=\"#\" onClick={() => this.onSelect(pkmn)}><p>{pkmn.name}</p></a>\n          </div>\n        )} \n      </div> \n    );\n  }\n}\n\nSelector.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      url: PropTypes.string.isRequired \n    })\n  ).isRequired\n};\n\nexport default Selector;\n","import React, { Component } from \"react\";\nimport Selector from \"./components/Selector\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    isLoading: false,\n    error: \"\",\n    selected: \"\",\n    selectionList: \"\",\n    nextURL: \"\",\n    prevURL: \"\",\n    offset: 0,\n    limit: 15\n  };\n\n  componentDidMount() {\n    // When the component mounts, grab a bunch of pokemon from the API\n    const { offset, limit } = this.state;\n    this.getPokemon(\n      `https://pokeapi.co/api/v2/pokemon/?limit=${limit}&offset=${offset}`\n    );\n  }\n\n  getPokemon(url) {\n    this.setState({ isLoading: true });\n    fetch(url)\n      .then(res => res.json())\n      .then(res => {\n        this.setState({\n          selectionList: res.results,\n          prevURL: res.previous,\n          nextURL: res.next\n        });\n      })\n      .catch(error => this.setState({ error }))\n      .finally(() => this.setState({ isLoading: false }));\n  }\n\n  getDetailedStats(url) {\n    this.setState({ isLoading: true });\n    fetch(url)\n      .then(res => res.json())\n      .then(res => {\n        this.setState({ selected: res });\n      })\n      .catch(error => this.setState({ error }))\n      .finally(() => this.setState({ isLoading: false }));\n  }\n\n  onSelect(pokemon) {\n    this.getDetailedStats(pokemon.url);\n  }\n\n  next() {\n    // Set the offset and limit based on the URL\n    const url = new URL(this.state.nextURL);\n    const params = url.searchParams;\n    const limit = params.get(\"limit\");\n    const offset = params.get(\"offset\");\n    this.setState({ offset, limit });\n    this.getPokemon(this.state.nextURL);\n  }\n\n  prev() {\n    this.getPokemon(this.state.prevURL);\n  }\n\n  render() {\n    const {\n      selected,\n      selectionList,\n      error,\n      isLoading,\n      offset,\n      limit,\n      nextURL,\n      prevURL\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <main>\n          <div className=\"Container\">\n            {/* First, if there's an error, display it */}\n            {error && <p>{error}</p>}\n\n            {/* \n            The pokedex can have one of two views, the first view is a selection \n            on the right side of the screen, with a portrait of the pokemon on\n            the left side. The second view is invoked when the user \"clicks\" on \n            the pokemon from the scroll list. This view is a horizontal split\n            wherein, on the top is an image of the pokemon, along with some stats.\n            The bottom portion is the description of the pokemon. This view is \n            very similar to the Gen 1 pokedex in the Pokemon games.\n            */}\n\n            {/* When a pokemon is selected, display the details here */}\n            <div className=\"Details\">\n              {isLoading && <div className=\"loader\"></div>}\n              {selected && !isLoading && (\n                <div style={{ padding: \"1em\" }}>\n                  <h3>\n                    #{selected.id} {selected.name}\n                  </h3>\n                  <p>Height: {selected.height}</p>\n                  <p>Weight: {selected.weight}</p>\n                  <p>Normal form</p>\n                  <img\n                    src={selected.sprites.front_default}\n                    alt={`${selected.name} normal form`}\n                  />\n                  <p>Shiny form</p>\n                  <img\n                    src={selected.sprites.front_shiny}\n                    alt={`${selected.name} shiny form`}\n                  />\n                </div>\n              )}\n            </div>\n\n            {/*\n            For each pokemon that should be shown (there should be a max\n            limit) display them in a list \n            */}\n\n            <div className=\"Selector\">\n              {selectionList && (\n                <Selector\n                  data={selectionList}\n                  onSelectPokemon={pokemon => this.onSelect(pokemon)}\n                />\n              )}\n\n              {/*\n                There should be a scroll up and scroll down action available, doing so should\n                grab the next \"page\" of Pokemon from the API\n              */}\n              <button onClick={() => this.prev()}>prev</button>\n              <button onClick={() => this.next()}>next</button>\n            </div>\n\n            <footer className=\"Footer\">\n              <p className=\"text-center\">Displaying {+offset} - {+offset + +limit}</p>\n              <p className=\"text-center\">\n                Built by <a href=\"https://twitter.com/devnoot\">devnoot</a> using{\" \"}\n                <a href=\"https://pokespi.co\">PokeAPI</a>\n              </p>\n            </footer>\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}